import { NextResponse } from 'next/server';
import { sql } from '@vercel/postgres';

// Slugify helper (same as your frontend)
const slugify = (title, year) => {
  return `${title}-${year}`
    .toString()
    .toLowerCase()
    .replace(/'/g, "")
    .replace(/[^a-z0-9]+/g, "-")
    .replace(/^-+|-+$/g, "");
};

export async function POST(req) {
  try {
    const {
      title,
      year,
      director,
      screenwriters,
      producers,
      studios,
      run_time,
      genre,
    } = await req.json();

    if (!title || !genre || !year) {
      return NextResponse.json({ error: 'Missing title, genre or year' }, { status: 400 });
    }

    const genreTable = `${genre.toLowerCase().replace(/\s+/g, '')}movies`;
    const slugifiedUrl = slugify(title, year);
    const yearInt = parseInt(year, 10);
    const runTimeInt = run_time ? parseInt(run_time, 10) : null;

    // Check if movie exists
    const existing = await sql`
      SELECT * FROM ${sql(genreTable)} WHERE url = ${slugifiedUrl};
    `;
    if (existing.rows.length > 0) {
      return NextResponse.json({ message: 'Movie already exists' }, { status: 200 });
    }

    try {
      console.log('Trying to insert:', { title, yearInt, director, screenwriters, producers, studios, runTimeInt, slugifiedUrl });
      await sql`
        INSERT INTO ${sql(genreTable)} 
          (film, year, studios, director, screenwriters, producers, run_time, url)
        VALUES
          (${title}, ${yearInt}, ${studios}, ${director}, ${screenwriters}, ${producers}, ${runTimeInt}, ${slugifiedUrl});
      `;
      return NextResponse.json({ message: 'Movie inserted successfully' }, { status: 201 });
    } catch (insertError) {
      console.error('Insert failed:', insertError);
      return NextResponse.json({ error: 'Insert failed', details: insertError.message }, { status: 500 });
    }

  } catch (error) {
    console.error('Request failed:', error);
    return NextResponse.json({ error: 'Request failed' }, { status: 500 });
  }
}
